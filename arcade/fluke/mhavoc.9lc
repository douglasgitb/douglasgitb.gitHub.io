`! Major Havoc Test Script
! Douglas Gauck Dec 15 2017
! version 0.3 - added Alpha Address tests and Gamma POKEY tests


   INCLUDE "6502.POD"

SETUP

   POD 6502
   TRAP ACTIVE FORCE LINE NO		! Intercepts and prevents resets from WDDOG barking

PROGRAM 0

   DPY-MAJ HAVOC - GOOD AVG + GND WDDIS
   STOP					! waits for CONT keypress

0: LABEL 0
	DPY-1=ALPHA 2=GAMMA 3=COMM /1
 	IF REG1 = 1 GOTO 1
	IF REG1 = 2 GOTO 2
	IF REG1 = 3 GOTO 3
	GOTO 0

1: LABEL 1				! Alpha CPU menu
	DPY-A++ 1=RAM 2=ROM 3=ADDR 9=G /1
	IF REG1 = 1 GOTO 5
	IF REG1 = 2 GOTO 6
	IF REG1 = 3 GOTO 7
	IF REG1 = 9 GOTO 2
	IF REG1 = 0 GOTO 0
	GOTO 1

2: LABEL 2				! Gamma CPU menu
	DPY-G+ 1=RAM 2=ROM  4=POKEYS 9=A /1
	IF REG1 = 1 GOTO A
	IF REG1 = 2 GOTO B
! no Gamma ADDR tests yet
	IF REG1 = 4 GOTO D
	IF REG1 = 9 GOTO 1
	IF REG1 = 0 GOTO 0
	GOTO 2

3: LABEL 3
	EXECUTE PROGRAM 90		!Communications test
	GOTO 0

5: LABEL 5
	EXECUTE PROGRAM 10		!Alpha RAM test
	GOTO 1
6: LABEL 6
	EXECUTE PROGRAM 20		!Alpha ROM test
	GOTO 1
7: LABEL 7
	EXECUTE PROGRAM 30		!Alpha Address Decoder test
	GOTO 1


A: LABEL A
	EXECUTE PROGRAM 11		!Gamma RAM test
	GOTO 2
B: LABEL B
	EXECUTE PROGRAM 21		!Gamma ROM test
	GOTO 2
D: LABEL C
	EXECUTE PROGRAM 41		!Quad POKEY tests
	GOTO 2


PROGRAM 10   		      	  	!Alpha RAM test

   DPY-TESTING ALPHA PGM RAM 1J//K
	RAM SHORT @ 0000-01FF
   DPY-TESTING ALPHA PGM RAM 1J//K	 !maybe page select RAM via address 1780
	RAM SHORT @ 0200-07FF
   DPY-TESTING ALPHA PGM RAM 1H//J
	RAM SHORT @ 0800-09FF
   DPY-TESTING ALPHA COLOR RAM 12J//12K	! how to do RAM test with only 4 bits?
!	RAM SHORT @ 1400-141F
   DPY-TESTING ALPHA VGEN RAM0 6M//N
	RAM SHORT @ 4000-47FF
   DPY-TESTING ALPHA VGEN RAM1 6L//M
	RAM SHORT @ 4800-4FFF

   DPY-RAM TEST COMPLETE
   STOP

PROGRAM 11				!Gamma RAM test

   DPY-TESTING GAMMA PGM RAM 9P//Q
	RAM SHORT @ 0000-07FF

   DPY-RAM TESTING COMPLETE
   DPY-+-PRESS CONT#
   STOP


PROGRAM 20   				! Alpha ROM test

0: LABEL 0
   DPY-ROM VERSION 2 OR 3 OR VAX=4 ? /1
   DPY-PROGRAM ROM=1, VROM=2, BOTH=3 /2
	IF REG1 = 2 GOTO 2
	IF REG1 = 3 GOTO 4
	IF REG1 = 4 GOTO 6

2: LABEL 2				! Version 2 PGM ROM
   IF REG2 = 2 GOTO 3			! Skip to VROM

	DPY-TESTING ROMC 1L 104
	ROM TEST @ C000-FFFF SIG CBC5

	DPY-TESTING ROMB 1M//N 103
	ROM TEST @ 8000-BFFF SIG BEB1


	DPY-TESTING ROM2-P0 1N//P 109
	WRITE @ 1740 = 2
	ROM TEST @ 2000-3FFF SIG 4876

	DPY-TESTING ROM2-P1 1N//P 109
	WRITE @ 1740 = 3
	ROM TEST @ 2000-3FFF SIG D0B8


	DPY-TESTING ROM2-P2 1Q 101
	WRITE @ 1740 = 0
	ROM TEST @ 2000-3FFF SIG CA55

	DPY-TESTING ROM2-P3 1Q 101
	WRITE @ 1740 = 1
	ROM TEST @ 2000-3FFF SIG 52EA

   IF REG2 = 1 GOTO F			! Skip VROM if PGM only

3: LABEL 3				! Version 2 VROM
	DPY-TESTING VROM 6K//L 110
	ROM TEST @ 5000-5FFF SIG 8AD3


	WRITE @ 4000 = 25		! SET MAP0 AND MAP1 PER MH T/S GUIDE TG-252
	WRITE @ 4001 = 60
	WRITE @ 4002 = 00
	WRITE @ 4003 = E0
	WRITE @ 1640 = FF

	DPY-TESTING VROM-P0 6H 106
	WRITE @ 4001 = 60
	ROM TEST @ 6000-7FFF SIG 1580

	DPY-TESTING VROM-P1 6H 106
	WRITE @ 4001 = 61
	ROM TEST @ 6000-7FFF SIG 2113

	DPY-TESTING VROM-P2 6J//K 107
	WRITE @ 4001 = 62
	ROM TEST @ 6000-7FFF SIG DF51	

	DPY-TESTING VROM-P3 6J//K 107
	WRITE@ 4001 = 63
	ROM TEST @ 6000-7FFF SIG 273F

	GOTO F

4: LABEL 4				! Version 3 PGM ROM
   IF REG2 = 2 GOTO 5			! Skip to VROM

	DPY-TESTING ROMC 1L 217
	ROM TEST @ C000-FFFF SIG 34C8

	DPY-TESTING ROMB 1M//N 216
	ROM TEST @ 8000-BFFF SIG F605


	DPY-TESTING ROM2-P0 1N//P 318
	WRITE @ 1740 = 2
	ROM TEST @ 2000-3FFF SIG C37C

	DPY-TESTING ROM2-P1 1N//P 318
	WRITE @ 1740 = 3
	ROM TEST @ 2000-3FFF SIG 2DF2


	DPY-TESTING ROM2-P2 1Q 215
	WRITE @ 1740 = 0
	ROM TEST @ 2000-3FFF SIG 2057

	DPY-TESTING ROM2-P3 1Q 215
	WRITE @ 1740 = 1
	ROM TEST @ 2000-3FFF SIG FD30

   IF REG2 = 1 GOTO F			! Skip VROM if PGM only

5: LABEL 5				! Version 3 VROM
	DPY-TESTING VROM 6K//L 210
	ROM TEST @ 5000-5FFF SIG 7C06


	WRITE @ 4000 = 25		! SET MAP0 AND MAP1 PER MH T/S GUIDE TG-252
	WRITE @ 4001 = 60
	WRITE @ 4002 = 00
	WRITE @ 4003 = E0
	WRITE @ 1640 = FF

	DPY-TESTING VROM-P0 6H 106
	WRITE @ 4001 = 60
	ROM TEST @ 6000-7FFF SIG 1580

	DPY-TESTING VROM-P1 6H 106
	WRITE @ 4001 = 61
	ROM TEST @ 6000-7FFF SIG 2113

	DPY-TESTING VROM-P2 6J//K 107
	WRITE @ 4001 = 62
	ROM TEST @ 6000-7FFF SIG DF51	

	DPY-TESTING VROM-P3 6J//K 107
	WRITE@ 4001 = 63
	ROM TEST @ 6000-7FFF SIG 273F

	GOTO F

6: LABEL 6				! RETURN TO VAX VERSION
  IF REG2 = 2 GOTO 7			! Skip to VROM

	DPY-TESTING ROMC 1L 917
	ROM TEST @ C000-FFFF SIG 7867

	DPY-TESTING ROMB 1M//N 916
	ROM TEST @ 8000-BFFF SIG 4577


	DPY-TESTING ROM2-P0 1N//P 918
	WRITE @ 1740 = 0
	ROM TEST @ 2000-3FFF SIG 0000

	DPY-TESTING ROM2-P1 1N//P 918
	WRITE @ 1740 = 2
	ROM TEST @ 2000-3FFF SIG 0000


	DPY-TESTING ROM2-P2 1Q 915
	WRITE @ 1740 = 1
	ROM TEST @ 2000-3FFF SIG 0000

	DPY-TESTING ROM2-P3 1Q 915
	WRITE @ 1740 = 3
	ROM TEST @ 2000-3FFF SIG 0000

   IF REG2 = 1 GOTO F			! Skip VROM if PGM only

7: LABEL 7				! VAX VROM

	DPY-TESTING VROM 6K//L 210
	ROM TEST @ 5000-5FFF SIG 74C0


	WRITE @ 4000 = 25		! SET MAP0 AND MAP1 PER MH T/S GUIDE TG-252
	WRITE @ 4001 = 60
	WRITE @ 4002 = 00
	WRITE @ 4003 = E0
	WRITE @ 1640 = FF

	DPY-TESTING VROM-P0 6H 106
	WRITE @ 4001 = 60
	ROM TEST @ 6000-7FFF SIG 1580

	DPY-TESTING VROM-P1 6H 106
	WRITE @ 4001 = 61
	ROM TEST @ 6000-7FFF SIG 2113

	DPY-TESTING VROM-P2 6J//K 907
	WRITE @ 4001 = 62
	ROM TEST @ 6000-7FFF SIG 0000	

	DPY-TESTING VROM-P3 6J//K 907
	WRITE@ 4001 = 63
	ROM TEST @ 6000-7FFF SIG 0000

	GOTO F

F: LABEL F
	DPY-ROM TEST COMPLETE
   STOP

PROGRAM 21					!Gamma ROM test

0: LABEL 0
   DPY-ATARI=2 OR VAX=4 ? /1
	IF REG1 = 2 GOTO 1
	IF REG1 = 4 GOTO 2
   GOTO 0

1: LABEL 1
	DPY-TESTING GAMMA ROM 9S 108
	ROM TEST @ 8000-BFFF SIG A874
   GOTO F

2: LABEL 2
	DPY-TESTING GAMMA ROM 9S 908
	ROM TEST @ 8000-BFFF SIG 41BC

F: LABEL F
	DPY-ROM TEST COMPLETE
   STOP

PROGRAM 30   				! Alpha Address Decoders test
					! REG8 = 0 to write, 1 to read
   SYNC ADDRESS				! REG9 = Address
   DPY-PLACE PROBE ON CHIP-PIN#		! REGA = Value to write (if writing)
   STOP					! REGB = Bit to toggle (if PGM 66)
   REGC = 20				! Number of pulses expected in result (hex)
   

   DPY-ROMC 4L-7#		! ROMC Not working for some reason
	STOP
	REG8 = 1
	REG9 = C000
	DPY-PROBING...#
	EXECUTE PROGRAM 65

   DPY-ROMB 4L-6#
	STOP
	REG8 = 1
	REG9 = 8000
	DPY-PROBING...#
	EXECUTE PROGRAM 65

   DPY-VMEM 4L-5#
	STOP
	REG8 = 1
	REG9 = 4000
	DPY-PROBING...#
	EXECUTE PROGRAM 65

   DPY-ROM2 4M-6#
	STOP
	REG8 = 1
	REG9 = 2000
	DPY-PROBING...#
	EXECUTE PROGRAM 65

  DPY-PORTRD 4N-4#
	STOP
	REG8 = 1
	REG9 = 1000
	DPY-PROBING...#
	EXECUTE PROGRAM 65

  DPY-INPUTS 4N-5#
	STOP
	REG8 = 1
	REG9 = 1200
	DPY-PROBING...#
	EXECUTE PROGRAM 65

   DPY-COLORAM 4N-6#
	STOP
	REG8 = 1
	REG9 = 1400
	DPY-PROBING...#
	EXECUTE PROGRAM 65

   DPY-WREN5N 4N-7#			! Enable LS138 @ 5N
	STOP
	REG8 = 0
	REGA = 0
	REG9 = 1600
	DPY-PROBING...#
	EXECUTE PROGRAM 65

   DPY-COMRAM 4N-9#
	STOP
	REG8 = 1
	REG9 = 1800
	DPY-PROBING...#
	EXECUTE PROGRAM 65

   DPY-EN5N 4N-10#			! Enable lower half of 4N
	STOP
	REG8 = 1
	REG9 = 1000
	DPY-PROBING...#
	EXECUTE PROGRAM 65

   DPY-ZRAM1 4N-11#
	STOP
	REG8 = 1
	REG9 = 800
	DPY-PROBING...#
	EXECUTE PROGRAM 65

   DPY-ZRAM0 4N-12#
	STOP
	REG8 = 1
	REG9 = 0
	DPY-PROBING...#
	EXECUTE PROGRAM 65

  DPY-PORTWR 5N-7#
	STOP
	REG8 = 0
	REGA = 0
	REG9 = 17C0
	DPY-PROBING...#
	EXECUTE PROGRAM 65

  DPY-RAMSEL 5N-9#
	STOP
	REG8 = 0
	REG9 = 1780
	DPY-PROBING...#
	EXECUTE PROGRAM 65

  DPY-MMU 5N-10#
	STOP
	REG8 = 0
	REG9 = 1740
	DPY-PROBING...#
	EXECUTE PROGRAM 65

  DPY-INTACK 5N-11#
	STOP
	REG8 = 0
	REG9 = 1700
	DPY-PROBING...#
	EXECUTE PROGRAM 65

  DPY-VGRST 5N-12#
	STOP
	REG8 = 0
	REG9 = 16C0
	DPY-PROBING...#
	EXECUTE PROGRAM 65

  DPY-WDCLR 5N-13#
	STOP
	REG8 = 0
	REG9 = 1680
	DPY-PROBING...#
	EXECUTE PROGRAM 65

  DPY-VGGO 5N-14#
	STOP
	REG8 = 0
	REG9 = 1640
	DPY-PROBING...#
	EXECUTE PROGRAM 65

  DPY-STROBES 5N-15#
	STOP
	REG8 = 0
	REG9 = 1600
	DPY-PROBING...#
	EXECUTE PROGRAM 65
						! REG8 = 0 to write, 1 to read
   						! REG9 = Address
   						! REGA = Value to write (if writing)
   						! REGB = Bit to toggle (if PGM 66)
   DPY-LIGHT 8M-19#
	STOP
	REG8 = 0
	REG9 = 1600
	REGA = 1
	REGB = 0
	DPY-PROBING...#
	EXECUTE PROGRAM 66

   DPY-RESET B 8M-15#
	STOP
	REG8 = 0
	REG9 = 1600
	REGA = 4
	REGB = 2
	DPY-PROBING...#
	EXECUTE PROGRAM 66

   DPY-RESET G 8M-12#
	STOP
	REG8 = 0
	REG9 = 1600
	REGA = 8
	REGB = 3
	DPY-PROBING...#
	EXECUTE PROGRAM 66

   DPY-PLAYER 1 8M-6#
	STOP
	REG8 = 0
	REG9 = 1600
	REGA = 20
	REGB = 5
	DPY-PROBING...#
	EXECUTE PROGRAM 66

   DPY-MMUPAGE0 2N-9#			! Not quite right
	STOP
	REG8 = 0
	REG9 = 1740
	REGA = 0
	REGB = 0
	DPY-PROBING...#
	EXECUTE PROGRAM 66

   DPY-//MMUPAGE1 2N-6#
	STOP
	REGA = 1
	REGB = 1
	DPY-PROBING...#
	EXECUTE PROGRAM 66

   DPY-MMUPAGE1 2N-5#
	STOP
	REGA = 2
	REGB = 2
	DPY-PROBING...#
	EXECUTE PROGRAM 66

   DPY-TEST COMPLETE#
   STOP


PROGRAM 41				! Quad POKEY tests
0: DPY-1=QUICK 2=EXHAUSTIVE  9=X/1
	IF REG1 = 1 GOTO A
	IF REG1 = 2 GOTO B
	IF REG1 = 9 GOTO F
	GOTO 0
A: EXECUTE PROGRAM 43		! Quick POKEY test
	GOTO 0
B: EXECUTE PROGRAM 44		! Exhaustive POKEY test
	GOTO 0
F: STOP

PROGRAM 43				! Quick test of all four POKEY cores
	REG8 = 4			! LENGTH OF NOTE
	REG2 = 01			! FILTER VALUE (15KHz)

	WRITE @ 2000 = 00		! RESET CIO-1 FREQ 1
	WRITE @ 2001 = 00		! RESET CIO-1 CTL 1
	WRITE @ 2002 = 00		! RESET CIO-1 FREQ 2
	WRITE @ 2003 = 00		! RESET CIO-1 CTL 2
	WRITE @ 2004 = 00
	WRITE @ 2005 = 00
	WRITE @ 2006 = 00
	WRITE @ 2007 = 00
	WRITE @ 2020 = REG2		! SET CIO-1 AUDCTL

	WRITE @ 2008 = 00		! CIO-2
	WRITE @ 2009 = 00
	WRITE @ 200A = 00
	WRITE @ 200B = 00
	WRITE @ 200C = 00
	WRITE @ 200D = 00
	WRITE @ 200E = 00
	WRITE @ 200F = 00
	WRITE @ 2028 = REG2

	WRITE @ 2010 = 00		! CIO-3
	WRITE @ 2011 = 00
	WRITE @ 2012 = 00
	WRITE @ 2013 = 00
	WRITE @ 2014 = 00
	WRITE @ 2015 = 00
	WRITE @ 2016 = 00
	WRITE @ 2017 = 00
	WRITE @ 2030 = REG2

	WRITE @ 2018 = 00		! CIO-4
	WRITE @ 2019 = 00
	WRITE @ 201A = 00
	WRITE @ 201B = 00
	WRITE @ 201C = 00
	WRITE @ 201D = 00
	WRITE @ 201E = 00
	WRITE @ 201F = 00
	WRITE @ 2038 = REG2


	WRITE @ 2000 = A2
	WRITE @ 2001 = AF
	EXECUTE PROGRAM 99
	WRITE @ 2001 = 00
	WRITE @ 2002 = A2
	WRITE @ 2003 = AF
	EXECUTE PROGRAM 99
	WRITE @ 2003 = 00
	WRITE @ 2004 = A2
	WRITE @ 2005 = AF
	EXECUTE PROGRAM 99
	WRITE @ 2005 = 00
	WRITE @ 2006 = 79
	WRITE @ 2007 = AF
	EXECUTE PROGRAM 99
	EXECUTE PROGRAM 99
	WRITE @ 2007 = 00
	WRITE @ 2000 = 51
	WRITE @ 2001 = AF
	EXECUTE PROGRAM 99
	EXECUTE PROGRAM 99
	EXECUTE PROGRAM 99
	WRITE @ 2001 = 00

	EXECUTE PROGRAM 99
	
	WRITE @ 2008 = 5B
	WRITE @ 2009 = AF
	EXECUTE PROGRAM 99
	WRITE @ 2009 = 00
	WRITE @ 200A = 60
	WRITE @ 200B = AF
	EXECUTE PROGRAM 99
	WRITE @ 200B = 00
	WRITE @ 200C = 6C
	WRITE @ 200D = AF
	EXECUTE PROGRAM 99
	WRITE @ 200D = 00
	WRITE @ 200E = 3C
	WRITE @ 200F = AF
	EXECUTE PROGRAM 99
	EXECUTE PROGRAM 99
	WRITE @ 200F = 00
	WRITE @ 2008 = 51
	WRITE @ 2009 = AF
	EXECUTE PROGRAM 99
	EXECUTE PROGRAM 99
	WRITE @ 2009 = 00

	EXECUTE PROGRAM 99

	WRITE @ 2010 = 5B
	WRITE @ 2011 = AF
	EXECUTE PROGRAM 99
	WRITE @ 2011 = 00
	WRITE @ 2012 = 60
	WRITE @ 2013 = AF
	EXECUTE PROGRAM 99
	WRITE @ 2013 = 00
	WRITE @ 2014 = 6C
	WRITE @ 2015 = AF
	EXECUTE PROGRAM 99
	WRITE @ 2015 = 00
	WRITE @ 2016 = 3C
	WRITE @ 2017 = AF
	EXECUTE PROGRAM 99
	EXECUTE PROGRAM 99
	WRITE @ 2017 = 00
	WRITE @ 2010 = 51
	WRITE @ 2011 = AF
	EXECUTE PROGRAM 99
	EXECUTE PROGRAM 99
	WRITE @ 2011 = 00

	EXECUTE PROGRAM 99

	WRITE @ 2018 = 5B
	WRITE @ 2019 = AF
	EXECUTE PROGRAM 99
	WRITE @ 2019 = 00
	WRITE @ 201A = 60
	WRITE @ 201B = AF
	EXECUTE PROGRAM 99
	WRITE @ 201B = 00
	WRITE @ 201C = 5B
	WRITE @ 201D = AF
	EXECUTE PROGRAM 99
	WRITE @ 201D = 00
	WRITE @ 201E = 6C
	WRITE @ 201F = AF
	EXECUTE PROGRAM 99
	EXECUTE PROGRAM 99
	EXECUTE PROGRAM 99
	WRITE @ 201F = 00


PROGRAM 44				! Exhaustive test of Quad POKEY or QPE
	DPY-C0RE//LOC= 0=UR 1=UL 2=LL 3=LR
	DPY-+ /1
	IF REG1 = 0 GOTO 0
	IF REG1 = 1 GOTO 1
	IF REG1 = 2 GOTO 2
	IF REG1 = 3 GOTO 3
	GOTO F

0:	REG1 = 2000	! Base POKEY address is 2000, core 1 or upper right POKEY in QPE (near 'ATARI')
	REG2 = 2001
	REG3 = 2002
	REG4 = 2003
	REG5 = 2004
	REG6 = 2005
	REG7 = 2006
	REG8 = 2007
	REGA = 2020
	REGB = 1
	GOTO 4
1:	REG1 = 2008	! POKEY core 2 or upper left
	REG2 = 2009
	REG3 = 200A
	REG4 = 200B
	REG5 = 200C
	REG6 = 200D
	REG7 = 200E
	REG8 = 200F
	REGA = 2028
	REGB = 2
	GOTO 4
2:	REG1 = 2010	! POKEY core 3 or lower left (near 'ELIMINATOR')
	REG2 = 2011
	REG3 = 2012
	REG4 = 2013
	REG5 = 2014
	REG6 = 2015
	REG7 = 2016
	REG8 = 2017
	REGA = 2030
	REGB = 3
	GOTO 4
3:	REG1 = 2018	! POKEY core 4 or lower right (near 'QUAD')
	REG2 = 2019
	REG3 = 201A
	REG4 = 201B
	REG5 = 201C
	REG6 = 201D
	REG7 = 201E
	REG8 = 201F
	REGA = 2038
	REGB = 4
	GOTO 4

4: DPY-TESTING POKEY CO=$B MID C AUDCTL 
	WRITE @ REG1 = 79
	WRITE @ REG2 = AF
	REG9=REGA
	EXECUTE 45
   STOP

   DPY-TESTING POKEY CO=$B CH1 64KHZ
	WRITE @ REGA = 00
	WRITE @ REG1 = FF
	WRITE @ REG2 = AF
	REG9 = REG1
	EXECUTE 45
   DPY-TESTING POKEY CO=$B CH1 15KHZ
	WRITE @ REGA = 01
	EXECUTE 45
   DPY-TESTING POKEY CO=$B CH1 1.79K
	WRITE @ REGA = 40
	EXECUTE 45
	WRITE @ REGA = 00
   DPY-TESTING POKEY CO=$B CH1 NZ0
	WRITE @ REG2 = 0F
   STOP
   DPY-TESTING POKEY CO=$B CH1 NZ2
	WRITE @ REG2 = 2F
   STOP
   DPY-TESTING POKEY CO=$B CH1 NZ4
	WRITE @ REG2 = 4F
   STOP
   DPY-TESTING POKEY CO=$B CH1 NZ6
	WRITE @ REG2 = 6F
   STOP
   DPY-TESTING POKEY CO=$B CH1 NZ8
	WRITE @ REG2 = 8F
   STOP
   DPY-TESTING POKEY CO=$B CH1 NZC
	WRITE @ REG2 = CF
   STOP
	WRITE @ REG2 = 00


   DPY-TESTING POKEY CO=$B CH2 64KHZ
	WRITE @ REGA = 00
	WRITE @ REG3 = FF
	WRITE @ REG4 = AF
	REG9 = REG3
	EXECUTE 45
   DPY-TESTING POKEY CO=$B CH2 15KHZ
	WRITE @ REGA = 01
	EXECUTE 45
   DPY-TESTING POKEY CO=$B CH2 1.79K
	WRITE @ REGA = 40
	EXECUTE 45
	WRITE @ REGA = 00
   DPY-TESTING POKEY CO=$B CH2 NZ0
	WRITE @ REG4 = 0F
   STOP
   DPY-TESTING POKEY CO=$B CH2 NZ2
	WRITE @ REG4 = 2F
   STOP
   DPY-TESTING POKEY CO=$B CH2 NZ4
	WRITE @ REG4 = 4F
   STOP
   DPY-TESTING POKEY CO=$B CH2 NZ6
	WRITE @ REG4 = 6F
   STOP
   DPY-TESTING POKEY CO=$B CH2 NZ8
	WRITE @ REG4 = 8F
   STOP
   DPY-TESTING POKEY CO=$B CH2 NZC
	WRITE @ REG4 = CF
   STOP
	WRITE @ REG4 = 00


   DPY-TESTING POKEY CO=$B CH3 64KHZ
	WRITE @ REGA = 00
	WRITE @ REG5 = FF
	WRITE @ REG6 = AF
	REG9 = REG5
	EXECUTE 45
   DPY-TESTING POKEY CO=$B CH3 15KHZ
	WRITE @ REGA = 01
	EXECUTE 45
   DPY-TESTING POKEY CO=$B CH3 1.79K
	WRITE @ REGA = 40
	EXECUTE 45
	WRITE @ REGA = 00
   DPY-TESTING POKEY CO=$B CH3 NZ0
	WRITE @ REG6 = 0F
   STOP
   DPY-TESTING POKEY CO=$B CH3 NZ2
	WRITE @ REG6 = 2F
   STOP
   DPY-TESTING POKEY CO=$B CH3 NZ4
	WRITE @ REG6 = 4F
   STOP
   DPY-TESTING POKEY CO=$B CH3 NZ6
	WRITE @ REG6 = 6F
   STOP
   DPY-TESTING POKEY CO=$B CH3 NZ8
	WRITE @ REG6 = 8F
   STOP
   DPY-TESTING POKEY CO=$B CH3 NZC
	WRITE @ REG6 = CF
   STOP
	WRITE @ REG6 = 00


   DPY-TESTING POKEY CO=$B CH4 64KHZ
	WRITE @ REGA = 00
	WRITE @ REG7 = FF
	WRITE @ REG8 = AF
	REG9 = REG7
	EXECUTE 45
   DPY-TESTING POKEY CO=$B CH4 15KHZ
	WRITE @ REGA = 01
	EXECUTE 45
   DPY-TESTING POKEY CO=$B CH4 1.79K
	WRITE @ REGA = 40
	EXECUTE 45
	WRITE @ REGA = 00
   DPY-TESTING POKEY CO=$B CH4 NZ0
	WRITE @ REG8 = 0F
   STOP
   DPY-TESTING POKEY CO=$B CH4 NZ2
	WRITE @ REG8 = 2F
   STOP
   DPY-TESTING POKEY CO=$B CH4 NZ4
	WRITE @ REG8 = 4F
   STOP
   DPY-TESTING POKEY CO=$B CH4 NZ6
	WRITE @ REG8 = 6F
   STOP
   DPY-TESTING POKEY CO=$B CH4 NZ8
	WRITE @ REG8 = 8F
   STOP
   DPY-TESTING POKEY CO=$B CH4 NZC
	WRITE @ REG8 = CF
   STOP
	WRITE @ REG8 = 00

F: STOP

	
PROGRAM 45
   REG1 = FF
0: WRITE @ REG9 = REG1
	DEC REG1
	IF REG1 > 0 GOTO 0
   WRITE @ REG9 = 00


PROGRAM 64			!BUILD DATA FOR PGM 60/61

!   REGA = FF
   REGC = 20

0: LABEL 0
   DPY-ENTER ADDR /1
   REG9 = REG1
   DPY-READY PROBE, ENTER BIT /1
   REGB = REG1
   DPY-PROBING...#
   EXECUTE PROGRAM 66
   IF REG9 > 0 GOTO 0


PROGRAM 65		! Takes REG8 (R=1, W=0), REG9 (Address), REGA (value), REGC (pulse count)

   READ PROBE
   REG1 = 20		! SET TO LOOP 0x20 TIMES (32)
1: LABEL 1			! READ
   IF REG8 = 0 GOTO 2	! OR DON'T
   READ @ REG9
   GOTO 3
2: LABEL 2
   WRITE @ REG9 = REGA	! WRITE
3: LABEL 3
   DEC REG1
   IF REG1 > 0 GOTO 1
   READ PROBE
AUX ADDRESS $9  DATA $0
   REG0 = REG0 AND 7F
AUX +MASKED $0
   IF REG0 = REGC GOTO 4
AUX BAD
   DPY-+BAD.
   GOTO 5
4: LABEL 4
AUX GOOD
   DPY-+OK.
5: LABEL 5
   DPY-+ COUNT @0=@C#
   STOP


PROGRAM 66		! Takes REG9 (Address), REGA (value), REGB (bit), REGC (pulse count)

   READ PROBE
   REG1 = 20		! SET TO LOOP 0x20 TIMES (32)
1: LABEL 1
   DTOG @ REG9 = REGA BIT REGB	! WRITE (REGA) TO ADDR (REG9) THEN TOGGLE BIT (REGB)
   DEC REG1
   IF REG1 > 0 GOTO 1
   READ PROBE
AUX ADDRESS $9  DATA $0
   REG0 = REG0 AND 7F
AUX +MASKED $0
   IF REG0 = REGC GOTO 2
AUX BAD
   DPY-+BAD.
   GOTO 3
2: LABEL 2
AUX GOOD
   DPY-+OK.
3: LABEL 3
   DPY-+ COUNT @0=@C#
   STOP


PROGRAM 90		! Alpha - Gamma communications

   DPY-REMOVE BOTH CPUS. POD IN ALPHA
   STOP
   DPY-GROUND WDDIS, PRESS CONT
   STOP
   SYNC ADDRESS
   DPY-PLACE PROBE ON CHIP-PIN#
   STOP

   DPY-RESET//G 7Q-13#
   STOP
   REGC = 20		! Number of pulses expected in result
   REG9 = 1600	! Address
   REGB = 3		! Bit to toggle
   DPY-PROBING...#
   EXECUTE PROGRAM 66

   DPY-//PORTWR//A 7Q-10#
   STOP
   REGB=0		! Write
   REG9=17C0
   DPY-PROBING...#
   EXECUTE PROGRAM 65

   DPY-XMTD//A 7Q-9#
   STOP
   READ PROBE
   REG1 = 20		! SET TO LOOP 0x20 TIMES (32)
1: LABEL 1
   DTOG @ 1600 = 0 BIT 3	! Toggle Clear on flip-fLop @ 7Q
   WRITE @ 17C0 = 0		! Write to Preset
   DEC REG1
   IF REG1 > 0 GOTO 1
   READ PROBE
   REG0 = REG0 AND 7F
   IF REG0 = REGC GOTO 2
   DPY-+BAD.
   GOTO 3
2: LABEL 2
   DPY-+OK.
3: LABEL 3
   DPY-+ COUNT @0=@C#
   STOP

   DPY-RCVD//G 7Q-8#
   STOP
   READ PROBE
   REG1 = 20		! SET TO LOOP 0x20 TIMES (32)
5: LABEL 5
   DTOG @ 1600 = 0 BIT 3	! Toggle Clear on flip-fLop @ 7Q
   WRITE @ 17C0 = 0		! Write to Preset
   DEC REG1
   IF REG1 > 0 GOTO 5
   READ PROBE
   REG0 = REG0 AND 7F
   IF REG0 = REGC GOTO 6
   DPY-+BAD.
   GOTO 7
6: LABEL 6
   DPY-+OK.
7: LABEL 7
   DPY-+ COUNT @0=@C#
   STOP

   DPY-//PORTRD//A 7Q-3#
   STOP
   REGB=1		! Read
   REG9=1000
   DPY-PROBING...#
   EXECUTE PROGRAM 65
   

   DPY-SWITCH POD TO GAMMA SOCKET
   STOP
   SYNC ADDRESS
   DPY-PLACE PROBE ON CHIP-PIN#
   STOP

   DPY-//PORTWR//G 7Q-4#
   STOP
   REGB=0		! Write
   REG9=5000
   DPY-PROBING...#
   EXECUTE PROGRAM 65

   DPY-XMTD//G 7Q-5#
   STOP
   READ PROBE
   REG1 = 20		! SET TO LOOP 0x20 TIMES (32)
A: LABEL A
!   DTOG @ 1600 = 0 BIT 3	! Toggle Clear on flip-fLop @ 7Q
   WRITE @ 5000 = 0		! Write to Preset
   DEC REG1
   IF REG1 > 0 GOTO A
   READ PROBE
   REG0 = REG0 AND 7F
   IF REG0 = REGC GOTO B
   DPY-+BAD.
   GOTO C
B: LABEL B
   DPY-+OK.
C: LABEL C
   DPY-+ COUNT @0=@C#
   STOP

   DPY-RCVD//A 7Q-6#
   STOP
   READ PROBE
   REG1 = 20		! SET TO LOOP 0x20 TIMES (32)
D: LABEL D
!   DTOG @ 1600 = 0 BIT 3	! Toggle Clear on flip-fLop @ 7Q
   WRITE @ 5000 = 0		! Write to Preset
   DEC REG1
   IF REG1 > 0 GOTO D
   READ PROBE
   REG0 = REG0 AND 7F
   IF REG0 = REGC GOTO E
   DPY-+BAD.
   GOTO F
E: LABEL E
   DPY-+OK.
F: LABEL F
   DPY-+ COUNT @0=@C#
   STOP

   DPY-//PORTRD//G 7Q-11#
   STOP
   REGB=1		! Read
   REG9=3000
   DPY-PROBING...#
   EXECUTE PROGRAM 65


   
PROGRAM 99	! PAUSE
	REG1 = REG8
0:	dec REG1
	if REG1 > 0 goto 0