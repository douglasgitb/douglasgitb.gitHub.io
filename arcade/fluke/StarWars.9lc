! Star Wars Test Script
! Douglas Gauck Dec 2 2016
! version 0.7
! Added Matrix tests
! No DIP test yet
! Divider under development
! VGEN test working

SETUP
	INCLUDE "6809E.POD"
	POD 6809E
	TRAP ACTIVE FORCE LINE NO

PROGRAM 0
	REG1 = 40
	DPY-STAR WARS. GND WDDIS, PRESS CONT
	DPY-+%1
	GOTO F
	
0: DPY-1=MAIN BOARD  2=AVG BOARD /1
 	IF REG1 = 1 GOTO 1
	IF REG1 = 2 GOTO 2
	GOTO 0

1: LABEL 1				! Main board menu
	DPY-1=RAM 2=ROM 3=ADDR 4=DIV 5=MTRX
	DPY-+/1
	IF REG1 = 1 GOTO 5
	IF REG1 = 2 GOTO 6
	IF REG1 = 3 GOTO 7
	IF REG1 = 4 GOTO 8
	IF REG1 = 5 GOTO 9
	IF REG1 = 0 GOTO 0
	IF REG1 = 9 GOTO 2
	GOTO 1

2: LABEL 2				! AVG menu
	DPY-1=RAM 2=ROM 3=VG 9=MAIN /1
	IF REG1 = 1 GOTO A
	IF REG1 = 2 GOTO B
	IF REG1 = 3 GOTO C
	IF REG1 = 0 GOTO 0
	IF REG1 = 9 GOTO 1
	GOTO 2

5: EXECUTE PROGRAM 10		!Main RAM test
	GOTO 1
6: EXECUTE PROGRAM 20		!Main ROM test
	GOTO 1
7: EXECUTE PROGRAM 30		!Address Decoder test
	GOTO 1
8: EXECUTE PROGRAM 40		!Divider tests
	GOTO 1
9: EXECUTE PROGRAM 50		!Matrix tests - include MATH RUN 9Hp15 4320 (Read D7) MAC FLAG, M HALT ?
	GOTO 1

A: EXECUTE PROGRAM 11		!AVG RAM test
	GOTO 2
B: EXECUTE PROGRAM 21		!AVG ROM test
	GOTO 2
C: EXECUTE PROGRAM 70		!Vector Generator test - include VGGO 9Hp6 4320
	GOTO 2

F: LABEL F				!Flash em if you got em
	WRITE @ 4686 = 00
	DPY-+%1
	WRITE @ 4683 = 80
	DPY-+%1
	IF REG1 = 25 GOTO 0
	WRITE @ 4683 = 00
	DPY-+%1
	WRITE @ 4686 = 80
	DPY-+%1
	IF REG1 = 25 GOTO 0
	WRITE @ 4682 = 00
	DPY-+%1
	WRITE @ 4683 = 80
	DPY-+%1
	IF REG1 = 25 GOTO 0
	WRITE @ 4683 = 00
	DPY-+%1
	WRITE @ 4682 = 80
	DPY-+%1
	IF REG1 = 25 GOTO 0
	WRITE @ 4686 = 00
	DPY-+%1
	WRITE @ 4683 = 80
	DPY-+%1
	IF REG1 = 25 GOTO 0
	GOTO F


PROGRAM 10   		      	  	!Main RAM test

   DPY-TESTING PROGRAM RAM 2F//H
	RAM SHORT @ 4800-4FFF
   DPY-TESTING MATRIX RAM 5F+5H
	RAM SHORT @ 5000-57FF
   DPY-TESTING MATRIX RAM 5F+5H
	RAM SHORT @ 5800-5FFF
   DPY-RAM TEST COMPLETE
   STOP

PROGRAM 11					!AVG RAM test

   DPY-TESTING VECTOR RAM0 3L
	RAM SHORT @ 0000-07FF
   DPY-TESTING VECTOR RAM1 3M
	RAM SHORT @ 0800-0FFF
   DPY-TESTING VECTOR RAM2 3P
	RAM SHORT @ 1000-17FF
   DPY-TESTING VECTOR RAM3 4L
	RAM SHORT @ 1800-1FFF
   DPY-TESTING VECTOR RAM4 4M
	RAM SHORT @ 2000-27FF
   DPY-TESTING VECTOR RAM5 4P
	RAM SHORT @ 2800-2FFF

   DPY-VRAM TESTING COMPLETE
   DPY-+-PRESS CONT#
   STOP


PROGRAM 20   				! Main ROM test

0: LABEL 0
   DPY-ROM VERSION 1 OR 2 ? /1
	IF REG1 = 1 GOTO 1
	IF REG1 = 2 GOTO 2
   GOTO 0

1: LABEL 1
	DPY-TESTING ROM0 1F 114 - PAGE 1
	ROM TEST @ 6000-7FFF SIG B16D

	DPY-WDDIS MUST BE GROUNDED#
	STOP

	DPY-TESTING ROM0 1F 114 - PAGE 2
	WRITE @ 4684 = 80			 ! Assert MPAGE for 27128 ROM0
	ROM TEST @ 6000-7FFF SIG C73F

	GOTO 3

2: LABEL 2
	DPY-TESTING ROM0 1F 214 - PAGE 1
	ROM TEST @ 6000-7FFF SIG 0313

	DPY-WDDIS MUST BE GROUNDED#
	STOP

	DPY-TESTING ROM0 1F 214 - PAGE 2
	WRITE @ 4684 = 80			 ! Assert MPAGE for 27128 ROM0
	ROM TEST @ 6000-7FFF SIG C73F

3: LABEL 3
	DPY-TESTING ROM1 1H//J 102
	ROM TEST @ 8000-9FFF SIG D476

	DPY-TESTING ROM2 1J//K 203
	ROM TEST @ A000-BFFF SIG E867

	DPY-TESTING ROM3 1K//L 104
	ROM TEST @ C000-DFFF SIG A81E

	DPY-TESTING ROM4 1M 206
	ROM TEST @ E000-FFFF SIG BC1E
	GOTO F

F: LABEL F
	DPY-ROM TEST COMPLETE
   STOP

!SOUND	136021.107	4000	-	5FFF		E6D1	
!SOUND	136021.208	6000	-	7FFF		FD7E	
!PROMS	136021.110	0	-	3FF		9260	
!PROMS	136021.111	400	-	7FF		9A6C	
!PROMS	136021.112	800	-	BFF		FBD5	
!PROMS	136021.113	C00	-	FFF		45A3	


PROGRAM 21					!AVG ROM test

0: LABEL 0
	DPY-TESTING VROM 1L 105
	ROM TEST @ 3000-3FFF SIG 790D
	DPY-VROM TEST COMPLETE
   STOP



PROGRAM 22   			!BUILD DATA FOR PGM 60

   DPY-ENTER ADDR, PROBE /1
   REG8 = REG1
   READ PROBE
   REG1 = 40
1: LABEL 1
   WRITE @ REG8 = FF
   DEC REG1
   IF REG1 > 0 GOTO 1
   READ PROBE
   REG0 = REG0 AND 7F
   IF REG0 = 40 GOTO 2
   DPY-INCORRECT WAS $0 NOT 16
   GOTO 3
2: LABEL 2
   DPY-COUNT CORRECT $0
3: LABEL 3


PROGRAM 30   				!Address Decoders test

   SYNC ADDRESS
   DPY-PLACE PROBE ON CHIP-PIN#
   REG8 = 1				! 0 TO WRITE, 1 TO READ
   REG9 = 0000				! ADDRESS
   REGA = FF				! VALUE TO WRITE (IF WRITING)
   REGC = 20				! EXPECT 32 PULSES
   STOP
 
   DPY-ROM4 0B//C-7#
	STOP
	REG9 = E000
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-ROM3 0B//C-9#
	STOP
	REG9 = C000
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-ROM2 0B//C-10#
	STOP
	REG9 = A000
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-ROM1 0B//C-11#
	STOP
	REG9 = 8000
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-ROM0 0B//C-12#
	STOP
	REG9 = 6000
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-RAMSEL 0B//C-13#
	STOP
	REG9 = 4000
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-EVMEM HI 0B//C-14#
	STOP
	REG9 = 2000
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-EVMEM LO 0B//C-15#
	STOP
	REG9 = 0000
	DPY-PROBING...#
	EXECUTE PROGRAM 65

   DPY-AUXSEL 2J-4#
	STOP
	REG9 = 4700
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-RAM 2J-5#
	STOP
	REG9 = 4800
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-MBRAM LOW 2J-6#
	STOP
	REG9 = 5000
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-MBRAM HIGH 2J-7#
	STOP
	REG9 = 5800
	DPY-PROBING...#
	EXECUTE PROGRAM 65

   DPY-MBCON 2L-7#
	STOP
	REG8 = 0			!WRITE
	REG9 = 4700
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-OUTS 2L-9#
	STOP
	REG9 = 4600
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-NOVRAM 2L-10#
	STOP
	REG9 = 4500
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-SOUND 2L-11#
	STOP
	REG9 = 4400
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-SW 2L-12#
	STOP
	REG8 = 1			!READ
	REG9 = 4300
	DPY-PROBING...#
	EXECUTE PROGRAM 65

   DPY-SOUNDRST 8M-7#
	STOP
	REG8 = 0			!WRITE
	REG9 = 46E0
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-ADCSTART 8M-9#
	STOP
	REG9 = 46C0
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-NSTORE 8M-10#
	STOP
	REG9 = 46A0
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-OLATCH 8M-11#
	STOP
	REG9 = 4680
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-IRQCLR 8M-12#
	STOP
	REG9 = 4660
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-WDCLR 8M-13#
	STOP
	REG9 = 4640
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-EVGRES 8M-14#
	STOP
	REG9 = 4620
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-EVGGO 8M-15#
	STOP
	REG9 = 4600
	DPY-PROBING...#
	EXECUTE PROGRAM 65

   DPY-ADC 8L-11#
	STOP
	REG8 = 1			!READ
	REG9 = 4380
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-OPT1 8L-12#
	STOP
	REG9 = 4360
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-OPT0 8L-13#
	STOP
	REG9 = 4340
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-IN1 8L-14#
	STOP
	REG9 = 4320
	DPY-PROBING...#
	EXECUTE PROGRAM 65
   DPY-IN0 8L-15#
	STOP
	REG9 = 4300
	DPY-PROBING...#
	EXECUTE PROGRAM 65

   DPY-TEST COMPLETE#
   STOP

PROGRAM 40			! Divider tests
0: DPY-1=ADECS 2=DIVL 3=ADD//DIFL 9=X/1
   IF REG1 = 1 GOTO 1
   IF REG1 = 2 GOTO 2
   IF REG1 = 3 GOTO 3
   IF REG1 = 9 GOTO 9
   GOTO 0
1: EXECUTE PROGRAM 41
   GOTO 0
2: EXECUTE PROGRAM 42
   GOTO 0
3: EXECUTE PROGRAM 43
   GOTO 0
9: STOP


PROGRAM 41   			! Decoders

   SYNC ADDRESS
   DPY-PLACE PROBE ON CHIP-PIN#
   REG8 = 1			! REG8 = 0 TO WRITE, 1 TO READ
   REGA = 1			! VALUE TO WRITE
   REGC = 20			! COUNT 32 PULSES
   STOP
DPY-PNRG 2J-9#
   STOP
   REG9 = 4703
   DPY-PROBING...#
   EXECUTE PROGRAM 65
DPY-REL 2J-11#
   STOP
   REG9 = 4701
   DPY-PROBING...#
   EXECUTE PROGRAM 65
DPY-REH 2J-12#
   STOP
   REG9 = 4700
   DPY-PROBING...#
   EXECUTE PROGRAM 65
DPY-DVDDL 7N-7#
   STOP
   REG8 = 0
   REG9 = 4707
   DPY-PROBING...#
   EXECUTE PROGRAM 65
DPY-DVDDH 7N-9#
   STOP
   REG9 = 4706
   DPY-PROBING...#
   EXECUTE PROGRAM 65
DPY-DVSRL 7N-10#
   STOP
   REG9 = 4705
   DPY-PROBING...#
   EXECUTE PROGRAM 65
DPY-DVSRH 7N-11#
   STOP
   REG9 = 4704
   DPY-PROBING...#
   EXECUTE PROGRAM 65
DPY-MW2 7N-13 /NOT 12/#
   STOP
   REG9 = 4702
   DPY-PROBING...#
   EXECUTE PROGRAM 65
DPY-MW1 7N-14#
   STOP
   REG9 = 4701
   DPY-PROBING...#
   EXECUTE PROGRAM 65
DPY-MW0 7N-15#
   STOP
   REG9 = 4700
   DPY-PROBING...#
   EXECUTE PROGRAM 65

DPY-TEST COMPLETE#
   STOP


PROGRAM 42			! Divisor Inverting Latch tests

   SYNC ADDRESS
   DPY-PLACE PROBE ON CHIP-PIN#
   REGA = 00			! VALUE TO WRITE
   REGB = 0			! BIT TO TOGGLE
   REGC = 20			! TARGET PULSE COUNT FOR 0x20 PULSES
   STOP

DPY-STP 7P-6#
   STOP
   REG9 = 4705
   DPY-PROBING...#
   EXECUTE PROGRAM 65
DPY-DS0 3M-3#
   STOP
   REG9 = 4704
   DPY-PROBING...#
   EXECUTE PROGRAM 65
DPY-DS1 8N-8#
   STOP
   REG9 = 4704
   DPY-PROBING...#
   EXECUTE PROGRAM 65

DPY-DIL0 6L-14#
   STOP
   REG9 = 4705
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-DIL1 6L-11#
   STOP
   REG9 = 4705
   REGB = 1
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-DIL3 6L-3#
   STOP
   REG9 = 4705
   REGB = 3
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-DIL4 6L-6#
   STOP
   REG9 = 4705
   REGB = 4
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-DIL2 6P-14#
   STOP
   REG9 = 4705
   REGB = 2
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-DIL5 6P-6#
   STOP
   REG9 = 4705
   REGB = 5
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-DIL6 6P-3#
   STOP
   REG9 = 4705
   REGB = 6
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-DIL7 6P-11#
   STOP
   REG9 = 4705
   REGB = 7
   DPY-PROBING...#
   EXECUTE PROGRAM 66


DPY-DIH0 4P-6#
   STOP
   REG9 = 4704
   REGB = 0
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-DIH1 4P-11#
   STOP
   REG9 = 4704
   REGB = 1
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-DIH2 4P-14#
   STOP
   REG9 = 4704
   REGB = 2
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-DIH3 4P-3#
   STOP
   REG9 = 4704
   REGB = 3
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-DIH4 5P-11#
   STOP
   REG9 = 4704
   REGB = 4
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-DIH5 5P-6#
   STOP
   REG9 = 4704
   REGB = 5
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-DIH6 5P-3#
   STOP
   REG9 = 4704
   REGB = 6
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-DIH7 5P-14#
   STOP
   REG9 = 4704
   REGB = 7
   DPY-PROBING...#
   EXECUTE PROGRAM 66


PROGRAM 43			! Adder/Difference Latch test

   SYNC ADDRESS
   DPY-PLACE PROBE ON CHIP-PIN#
   REGA = 00			! VALUE TO WRITE
   REGB = 0			! BIT TO TOGGLE
   REGC = 60			! TARGET PULSE COUNT FOR 0x20 PULSES
   WRITE @ 4704 = 00		! LOAD ADDER LATCH H 00000000
   WRITE @ 4705 = 01		! LOAD ADDER LATCH L 00000000
   STOP

DPY-ADD15 5N-15#
   STOP
   REG9 = 4704
   REGA = 7F			! LOAD WITH INV OF 0111 1111
   REGB = 7			! TOGGLE BIT 7
   DPY-PROBING...#
   EXECUTE PROGRAM 66
DPY-ADD14 5N-2#
   STOP
   REG9 = 4704
   REGA = BF			! LOAD WITH INV OF 1011 1111
   REGB = 6			! TOGGLE BIT 6
   DPY-PROBING...#
   EXECUTE PROGRAM 66
DPY-ADD13 5N-6#
   STOP
   REG9 = 4704
   REGA = DF			! LOAD WITH INV OF 1101 1111
   REGB = 5			! TOGGLE BIT 5
   DPY-PROBING...#
   EXECUTE PROGRAM 66
DPY-ADD12 5N-9#
   STOP
   REG9 = 4704
   REGA = EF			! LOAD WITH INV OF 1110 1111
   REGB = 4			! TOGGLE BIT 4
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-ADD11 4N-15#
   STOP
   REG9 = 4704
   REGA = F7			! LOAD WITH INV OF 1111 0111
   REGB = 3			! TOGGLE BIT 3
   DPY-PROBING...#
   EXECUTE PROGRAM 66
DPY-ADD10 4N-2#
   STOP
   REG9 = 4704
   REGA = FB			! LOAD WITH INV OF 1111 1011
   REGB = 2			! TOGGLE BIT 2
   DPY-PROBING...#
   EXECUTE PROGRAM 66
DPY-ADD9 4N-6#
   STOP
   REG9 = 4704
   REGA = FD			! LOAD WITH INV OF 1111 1101
   REGB = 1			! TOGGLE BIT 1
   DPY-PROBING...#
   EXECUTE PROGRAM 66
DPY-ADD8 4N-9#
   STOP
   REG9 = 4704
   REGA = FE			! LOAD WITH INV OF 1111 1110
   REGB = 0			! TOGGLE BIT 0
   DPY-PROBING...#
   EXECUTE PROGRAM 66
DPY-ADD7 6N-15#
   STOP
   REG9 = 4705
   REGA = 7F			! LOAD WITH INV OF 0111 1111
   REGB = 7			! TOGGLE BIT 7
   DPY-PROBING...#
   EXECUTE PROGRAM 66
DPY-ADD6 6N-2#
   STOP
   REG9 = 4705
   REGA = BF			! LOAD WITH INV OF 1011 1111
   REGB = 6			! TOGGLE BIT 6
   DPY-PROBING...#
   EXECUTE PROGRAM 66
DPY-ADD5 6N-6#
   STOP
   REG9 = 4705
   REGA = DF			! LOAD WITH INV OF 1101 1111
   REGB = 5			! TOGGLE BIT 5
   DPY-PROBING...#
   EXECUTE PROGRAM 66
DPY-ADD4 6N-9#
   STOP
   REG9 = 4705
   REGA = EF			! LOAD WITH INV OF 1110 1111
   REGB = 4			! TOGGLE BIT 4
   DPY-PROBING...#
   EXECUTE PROGRAM 66
DPY-ADD3 6M-15#
   STOP
   REG9 = 4705
   REGA = F7			! LOAD WITH INV OF 1111 0111
   REGB = 3			! TOGGLE BIT 3
   DPY-PROBING...#
   EXECUTE PROGRAM 66
DPY-ADD2 6M-2#
   STOP
   REG9 = 4705
   REGA = FB			! LOAD WITH INV OF 1111 1011
   REGB = 2			! TOGGLE BIT 2
   DPY-PROBING...#
   EXECUTE PROGRAM 66
DPY-ADD1 6M-6#
   STOP
   REG9 = 4705
   REGA = FD			! LOAD WITH INV OF 1111 1101
   REGB = 1			! TOGGLE BIT 1
   DPY-PROBING...#
   EXECUTE PROGRAM 66
DPY-ADD0 6M-9#
   STOP
   REG9 = 4705
   REGA = FE			! LOAD WITH INV OF 1111 1110
   REGB = 0			! TOGGLE BIT 0
   DPY-PROBING...#
   EXECUTE PROGRAM 66


PROGRAM 50			! Matrix tests
0: DPY-MP 1=BIC 2=CLK 3=CTR 4=ISG 9=X/1
   IF REG1 = 1 GOTO 1
   IF REG1 = 2 GOTO 2
   IF REG1 = 3 GOTO 3
   IF REG1 = 4 GOTO 4
   IF REG1 = 9 GOTO 9
   GOTO 0
1: EXECUTE PROGRAM 51
   GOTO 0
2: EXECUTE PROGRAM 52
   GOTO 0
3: EXECUTE PROGRAM 53
   GOTO 0
4: EXECUTE PROGRAM 54
   GOTO 0
9: STOP


PROGRAM 51		! Block Index Counter
	
   SYNC ADDRESS
   DPY-PLACE PROBE ON CHIP-PIN#
   REG8 = 0			! Writing
   REGC = 20			! COUNT 32 PULSES
   STOP

DPY-//INC BIC 3E-14		! Write @ 4700 = 5B to have PROMs assert /INCBIC
   STOP
   REG9 = 4700
   REGA = 5B
   DPY-PROBING...#
   EXECUTE PROGRAM 65

DPY-BIC0 3E-3#			! Fill BIC and then toggle x for BICx
   STOP
   REG9 = 4702
   REGA = FF
   REGB = 0				! Bit to toggle
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-BIC1 3E-2#
   STOP
   REG9 = 4702
   REGB = 1
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-BIC2 3E-6#
   STOP
   REG9 = 4702
   REGB = 2
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-BIC3 3E-7#
   STOP
   REG9 = 4702
   REGB = 3
   DPY-PROBING...#
   EXECUTE PROGRAM 66


DPY-RIP BIC3 to BIC4 3E-13#
   STOP
   DPY-PROBING...#
   REG9 = 4702
   REGA = FF			! Fill BIC
   REG8 = 4700		! Second address
   REGD = 5B			! Increment BIC to force carry bit
   EXECUTE PROGRAM 67

DPY-BIC4 3F-3#
   STOP
   REG8 = 0			! Reset REG8 for writing after using Program 67
   REG9 = 4702
   REGB = 4
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-BIC5 3F-2#
   STOP
   REG9 = 4702
   REGB = 5
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-BIC6 3F-6#
   STOP
   REG9 = 4702
   REGB = 6
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-BIC7 3F-7#

   STOP
   REG9 = 4702
   REGB = 7
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-RIP BIC7 to BIC8 3F-13#
   STOP
   DPY-PROBING...#
   REG9 = 4702
   REGA = FF			! Fill BIC
   REG8 = 4700
   REGD = 5B			! Increment BIC to force carry bit
   EXECUTE PROGRAM 67

DPY-BIC8 3D-3#
   STOP
   REG8 = 0
   REG9 = 4701
   REGB = 0
   DPY-PROBING...#
   EXECUTE PROGRAM 66

DPY-TEST COMPLETE#
STOP

PROGRAM 52		! Matrix Processor Clock - these may or may not be the best/most precise addresses/values
   SYNC ADDRESS
   DPY-PLACE PROBE ON CHIP-PIN#
   REG8 = 0			! REG8 = 0 TO WRITE, 1 TO READ
   REGC = 20			! COUNT 32 PULSES
   STOP
DPY-//M HALT 8H-11#		! Write @ 4700 = 5A to have PROMs clear ACC and then HALT
   STOP
   REG9 = 4700
   REGA = 5A
   DPY-PROBING...#
   EXECUTE PROGRAM 65
DPY-MATH RUN 8H-9#		! Above also starts/stops RUN
   STOP
   REG9 = 4700
   REGA = 5A
   DPY-PROBING...#
   EXECUTE PROGRAM 65
DPY-//MACFLAG 8F-1#		! Write @ 4700 = 59 to have PROMs load reg C which starts/stops RUN
   STOP
   REG9 = 4700
   REGA = 59
   DPY-PROBING...#
   EXECUTE PROGRAM 65
DPY-NAND 8F-12#		! Test through NAND gate 
   STOP
   REG9 = 4700
   REGA = 59
   DPY-PROBING...#
   EXECUTE PROGRAM 65
DPY-CLOCK OUT 9D-15#		! Clear ACC and HALT runs clock
   STOP
   REG9 = 4700
   REGA = 5A
   DPY-PROBING...#
   EXECUTE PROGRAM 65
DPY-WP 8E-10#			! Also generates WP pulses 
   STOP
   REG9 = 4700
   REGA = 5A
   DPY-PROBING...#
   EXECUTE PROGRAM 65
DPY-//WP 8E-4#		! Also generates /WP pulses 
   STOP
   REG9 = 4700
   REGA = 5A
   DPY-PROBING...#
   EXECUTE PROGRAM 65

DPY-TEST COMPLETE#
STOP


PROGRAM 53		! Matrix Processor Address Counter

   SYNC ADDRESS
   DPY-PLACE PROBE ON CHIP-PIN#
   REGC = 20			! COUNT 32 PULSES
   STOP

   WRITE 4700 = 76		! preset bit 0 of MPA with 1001110110
DPY-MPA0 6H-3#
   STOP
   REG8 = 0			! Writing
   REG9 = 4700		
   REGA = 76			! Writes MPA with 0111011001 (RAC instruction)
   DPY-PROBING...#
   EXECUTE PROGRAM 65

DPY-MPA1 6H-2#
   STOP
   REG9 = 4700
   REGA = A2			! Writes MPA with 1010001100
   DPY-PROBING...#
   EXECUTE PROGRAM 65

DPY-MPA2 6H-6#
   STOP
   REGA = A2			! makes MPA 1010001100
   REG8 = 4700		! second address
   REGD = 5C			! makes MPA 0101110010
   DPY-PROBING...#
   EXECUTE PROGRAM 67

DPY-MPA3 6H-7#
   STOP
   DPY-PROBING...#
   EXECUTE PROGRAM 67

DPY-MPA4 6J-3#
   STOP
   REGA = 5C			! swap order for bits 4-6
   REGD = A2		
   DPY-PROBING...#
   EXECUTE PROGRAM 67

DPY-MPA5 6J-2#
   STOP
   DPY-PROBING...#
   EXECUTE PROGRAM 67

DPY-MPA6 6J-6#
   STOP
   DPY-PROBING...#
   EXECUTE PROGRAM 67

DPY-MPA7 6J-7#
   STOP
   REGA = A2			! back to 1->0 for bits 7 & 8
   REGD = 5C
   DPY-PROBING...#
   EXECUTE PROGRAM 67

DPY-MPA8 7P-9#
   STOP
   DPY-PROBING...#
   EXECUTE PROGRAM 67

DPY-MPA9 8H-5#
   STOP
   REGA = 5C			! back to 0->1 for bit 9
   REGD = A2		
   DPY-PROBING...#
   EXECUTE PROGRAM 67

DPY-TEST COMPLETE#
STOP


PROGRAM 54			! Instruction Strobe Gate tests
DPY-LDA 7F-8#
   STOP
   REG8 = 0			! Writing
   REG9 = 4700
   REGA = 57			! Writes MPA with LDA instruction
   DPY-PROBING...#
   EXECUTE PROGRAM 65

DPY-LDB 7F-6#
   STOP
   REGA = 58
   DPY-PROBING...#
   EXECUTE PROGRAM 65

DPY-LDC 7E-8#
   STOP
   REGA = 59
   DPY-PROBING...#
   EXECUTE PROGRAM 65

DPY-CLR ACC 7E-11#
   STOP
   REGA = 5A
   DPY-PROBING...#
   EXECUTE PROGRAM 65

DPY-INC BIC 7E-6#
   STOP
   REGA = 5B
   DPY-PROBING...#
   EXECUTE PROGRAM 65

DPY-MHALT 7F-3#
   STOP
   REGA = 5A
   DPY-PROBING...#
   EXECUTE PROGRAM 65

DPY-LAC 8D-8#
   STOP
   REGA = 5C
   DPY-PROBING...#
   EXECUTE PROGRAM 65

DPY-READ ACC 7E-3#
   STOP
   REGA = 76
   DPY-PROBING...#
   EXECUTE PROGRAM 65

! Need IP0-IP7

DPY-TEST COMPLETE#
STOP


PROGRAM 64			!BUILD DATA FOR PGM 60/61
   REGC = 20
0: LABEL 0
   DPY-ENTER ADDR /1
   REG9 = REG1
   DPY-READY PROBE, ENTER BIT /1
   REGB = REG1
   DPY-PROBING...#
   EXECUTE PROGRAM 66
   IF REG9 > 0 GOTO 0


PROGRAM 65		! Takes REG8 (R=1, W=0), REG9 (Address), REGA (value), REGC (pulse count)
   READ PROBE
   REG1 = REGC		! Usually set to loop 0x20 times (32)
1: LABEL 1			! READ
   IF REG8 = 0 GOTO 2	! OR DON'T
   READ @ REG9
   GOTO 3
2: LABEL 2
   WRITE @ REG9 = REGA	! WRITE
3: LABEL 3
   DEC REG1
   IF REG1 > 0 GOTO 1
   READ PROBE
AUX ADDRESS $9  DATA $0
   REG0 = REG0 AND 7F
AUX +MASKED $0
   IF REG0 = REGC GOTO 4
AUX BAD
   DPY-+BAD.
   GOTO 5
4: LABEL 4
AUX GOOD
   DPY-+OK.
5: LABEL 5
   DPY-+ COUNT @0=@C#
   STOP

PROGRAM 66		! Takes REG9 (address), REGA (value), REGB (bit), REGC (pulse count)
   READ PROBE
   REG1 = REGC	! Usually set to loop 0x20 times (32)
1: LABEL 1
   DTOG @ REG9 = REGA BIT REGB	! WRITE (REGA) TO ADDR (REG9) THEN TOGGLE BIT (REGB)
   DEC REG1
   IF REG1 > 0 GOTO 1
   READ PROBE
AUX ADDRESS $9  DATA $0
   REG0 = REG0 AND 7F
AUX +MASKED $0
   IF REG0 = REGC GOTO 2
AUX BAD
   DPY-+BAD.
   GOTO 3
2: LABEL 2
AUX GOOD
   DPY-+OK.
3: LABEL 3
   DPY-+ COUNT @0=@C#
   STOP

PROGRAM 67		! Takes REG9 (addr1), REG8 (addr2), REGA (value1), REGD (value2), REGC (count)
   READ PROBE
   REG1 = REGC		! Pulses to count
0: WRITE @ REG9 = REGA	! first value
   WRITE @ REG8 = REGD	! second value
   DEC REG1
   IF REG1 > 0 GOTO 0
   READ PROBE
   REG0 = REG0 AND 7F
   IF REG0 = REGC GOTO 1
   DPY-+BAD.
   GOTO 2
1: DPY-+OK.
2: DPY-+ COUNT @0=@C#
   STOP


PROGRAM 70

DPY-LOADING VECTOR PROGRAM...

WRITE @ 0 = 64
WRITE @ 1 = 80
WRITE @ 2 = 72
WRITE @ 3 = 0
WRITE @ 4 = 1D
WRITE @ 5 = D8
WRITE @ 6 = 1E
WRITE @ 7 = 20
WRITE @ 8 = 0
WRITE @ 9 = 0
WRITE @ A  = E3
WRITE @ B  = C0
WRITE @ C  = 4
WRITE @ D  = 50
WRITE @ E  = E0
WRITE @ F  = 0
WRITE @ 10 = 0
WRITE @ 11 = 0
WRITE @ 12 = FC
WRITE @ 13 = 40
WRITE @ 14 = 1B
WRITE @ 15 = B0
WRITE @ 16 = E0
WRITE @ 17 = 0
WRITE @ 18 = 80
WRITE @ 19 = 40
WRITE @ 1A  = 61
WRITE @ 1B  = FF
WRITE @ 1C  = 71
WRITE @ 1D  = 0
WRITE @ 1E  = 0
WRITE @ 1F  = 64
WRITE @ 20 = 1F
WRITE @ 21 = 6F
WRITE @ 22 = B8
WRITE @ 23 = 8F
WRITE @ 24 = B8
WRITE @ 25 = 94
WRITE @ 26 = B8
WRITE @ 27 = 2F
WRITE @ 28 = B8
WRITE @ 29 = 8B
WRITE @ 2A  = 40
WRITE @ 2B  = 8
WRITE @ 2C  = B8
WRITE @ 2D  = A0
WRITE @ 2E  = B8
WRITE @ 2F  = 2F
WRITE @ 30 = B8
WRITE @ 31 = 8B
WRITE @ 32 = B8
WRITE @ 33 = 8F
WRITE @ 34 = 40
WRITE @ 35 = 8
WRITE @ 36 = 61
WRITE @ 37 = 80
WRITE @ 38 = B8
WRITE @ 39 = 2F
WRITE @ 3A  = B8
WRITE @ 3B  = 9C
WRITE @ 3C  = B8
WRITE @ 3D  = 55
WRITE @ 3E  = 80
WRITE @ 3F  = 40
WRITE @ 40 = 62
WRITE @ 41 = 60
WRITE @ 42 = 72
WRITE @ 43 = 0
WRITE @ 44 = 1E
WRITE @ 45 = D4
WRITE @ 46 = 1F
WRITE @ 47 = 6C
WRITE @ 48 = B8
WRITE @ 49 = A0
WRITE @ 4A  = B8
WRITE @ 4B  = A0
WRITE @ 4C  = B8
WRITE @ 4D  = A0
WRITE @ 4E  = 40
WRITE @ 4F  = 2
WRITE @ 50 = 0
WRITE @ 51 = 0
WRITE @ 52 = E0
WRITE @ 53 = 0
WRITE @ 54 = 40
WRITE @ 55 = 6
WRITE @ 56 = B8
WRITE @ 57 = 55
WRITE @ 58 = B8
WRITE @ 59 = 2F
WRITE @ 5A  = B8
WRITE @ 5B  = 96
WRITE @ 5C  = B8
WRITE @ 5D  = 41
WRITE @ 5E  = B8
WRITE @ 5F  = 68
WRITE @ 60 = 40
WRITE @ 61 = 2
WRITE @ 62 = 0
WRITE @ 63 = 0
WRITE @ 64 = E0
WRITE @ 65 = 0
WRITE @ 66 = 40
WRITE @ 67 = 6
WRITE @ 68 = B8
WRITE @ 69 = 41
WRITE @ 6A  = B8
WRITE @ 6B  = 79
WRITE @ 6C  = B8
WRITE @ 6D  = 72
WRITE @ 6E  = 80
WRITE @ 6F  = 40
WRITE @ 70 = 72
WRITE @ 71 = 0
WRITE @ 72 = 0
WRITE @ 73 = 0
WRITE @ 74 = 1F
WRITE @ 75 = 70
WRITE @ 76 = 66
WRITE @ 77 = 80
WRITE @ 78 = B8
WRITE @ 79 = 6E
WRITE @ 7A  = B8
WRITE @ 7B  = 79
WRITE @ 7C  = B8
WRITE @ 7D  = 76
WRITE @ 7E  = B8
WRITE @ 7F  = 55
WRITE @ 80 = 40
WRITE @ 81 = 8
WRITE @ 82 = 65
WRITE @ 83 = 80
WRITE @ 84 = B8
WRITE @ 85 = 6E
WRITE @ 86 = B8
WRITE @ 87 = 5F
WRITE @ 88 = B8
WRITE @ 89 = 9C
WRITE @ 8A  = B8
WRITE @ 8B  = 4C
WRITE @ 8C  = 40
WRITE @ 8D  = 8
WRITE @ 8E  = 63
WRITE @ 8F  = 80
WRITE @ 90 = B8
WRITE @ 91 = 5A
WRITE @ 92 = B8
WRITE @ 93 = 2F
WRITE @ 94 = B8
WRITE @ 95 = 76
WRITE @ 96 = 80
WRITE @ 97 = 40
WRITE @ 98 = 67
WRITE @ 99 = 80
WRITE @ 9A  = 1F
WRITE @ 9B  = F4
WRITE @ 9C  = 0
WRITE @ 9D  = 9B
WRITE @ 9E  = 0
WRITE @ 9F  = 30
WRITE @ A0  = E0
WRITE @ A1  = 0
WRITE @ A2  = 0
WRITE @ A3  = 0
WRITE @ A4  = FE
WRITE @ A5  = CA
WRITE @ A6  = 1F
WRITE @ A7  = D0
WRITE @ A8  = E0
WRITE @ A9  = 0
WRITE @ AA  = 0
WRITE @ AB  = 0
WRITE @ AC  = E1
WRITE @ AD  = 36
WRITE @ AE = 80
WRITE @ AF = 40
WRITE @ B0 = E0
WRITE @ B1 = 00

WRITE @ 4600 = 01

   REG1 = 40
   DPY-CONFIRM PATTERN. CONT=EXIT#
0: DPY-+/%1
   IF REG1 = 40 GOTO 0
   WRITE @ 4620 = 0
   STOP

PROGRAM 91
   DPY-ENTER HEX ADDRESS /1
   READ @ REG1
   DPY ADDR $1 HAS $E
   STOP

PROGRAM 92
   REG1 = ED7E 		! SEND MEM TO AUX
0: READ @ REG1
   AUX $1 = $E
   INC REG1
   IF EF00 > REG1 GOTO 0

PROGRAM 93	! CLEAR VMEM
   REG1 = FF	!COUNTER
0: WRITE @ REG1 = 00
   DEC REG1
   IF REG1 > 0 GOTO 0